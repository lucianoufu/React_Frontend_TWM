{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Cabecalho from './Cabecalho';\nimport Conteudo from './Conteudo';\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* nomeProfessor: '', */\n\n      /* classe: '' */\n      nome: 'Luciano',\n      login: 'Luciano',\n      senha: 'Teste123',\n      tabela: []\n    };\n\n    this.setClasse = novaClasse => {\n      this.setState({\n        classe: novaClasse\n      });\n    };\n\n    this.setTabela = dados => {\n      this.setState({\n        Tabela: dados\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/escola/';\n      const requestOptions = {\n        method: 'GET',\n        headres: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        console.log(data);\n        console.log(this.state.tabela);\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    const lista_todos = this.state.tabela.map(nota => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), \" \", nota.nome_escola, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: [/*#__PURE__*/_jsxDEV(Cabecalho, {\n        nome: \"Luciano\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Conteudo, {\n        enviar: this.enviar,\n        receber: this.receber,\n        tableData: this.getTableData,\n        data: this.state.tabela\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), lista_todos]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Cabecalho","Conteudo","TeacherScreen","Component","constructor","props","state","nome","login","senha","tabela","setClasse","novaClasse","setState","classe","setTabela","dados","Tabela","receber","myUrl","requestOptions","method","headers","fetch","then","response","json","data","console","log","getTableData","headres","enviar","jsonData","body","JSON","stringify","render","lista_todos","map","nota","nome_escola"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Cabecalho from './Cabecalho'\nimport Conteudo from './Conteudo'\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        /* nomeProfessor: '', */\n        /* classe: '' */\n        nome: 'Luciano',\n        login: 'Luciano',\n        senha: 'Teste123',\n        tabela: []\n    };\n\n    setClasse = (novaClasse) => {\n        this.setState({\n            classe: novaClasse\n        })\n    }\n\n    setTabela = (dados) =>{\n        this.setState({\n            Tabela: dados\n        })\n    }\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/escola/'\n        const requestOptions = {\n            method: 'GET',\n            headres: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                console.log(data)\n                console.log(this.state.tabela)\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    render(){\n        const lista_todos = this.state.tabela.map(nota => \n            {\n                return (\n                    <ul>\n                        <li>\n                            <strong>nome:</strong> {nota.nome_escola} <br/>\n                        </li>\n                    </ul>\n                )\n            })\n        return(\n            <div className=\"TeacherScreen\">\n                <Cabecalho nome = \"Luciano\"/>\n                <Conteudo enviar = {this.enviar} receber = {this.receber} tableData = {this.getTableData} data = {this.state.tabela}/>\n                {/* <Teste classe = {this.state.classe} setClasse = {this.setClasse} /> */}\n                {/* {this.state.tabela.map(dados=> {\n                    <p>dados.nome_escola</p>\n                })} */}\n                {lista_todos}\n                \n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}