{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Conteudo from './Conteudo';\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teste: 0,\n      id_pessoa: 0,\n      id_professor: 2,\n      id_aluno: 0,\n      tabela: [],\n      classe: [],\n      operacao: 10\n    };\n\n    this.setTeste = event => {\n      this.setState({\n        teste: event.target.value\n      });\n    };\n\n    this.setOperacao = () => {\n      this.setState({\n        operacao: 20\n      });\n    };\n\n    this.setAlunoId = aluno_id => {\n      this.setState({\n        id_aluno: aluno_id\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.setClasse = event => {\n      this.setState({\n        classe: event.target.value\n      });\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/informacaoclasse/3ยบ_ano'.concat(this.state.classe);\n      const requestOptions = {\n        method: 'GET',\n        headres: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        this.setState({\n          tabela: data\n        });\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.getClassInformation = () => {\n      const myUrl = 'http://localhost:8000/api/classinformation/'.concat(this.state.id_professor);\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!!\");\n        this.setState({\n          classe: data\n        });\n      });\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getClassInformation,\n        children: \"Get class information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getTableData,\n        children: \"Get table information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), console.log(this.state.classe), /*#__PURE__*/_jsxDEV(Conteudo, {\n        enviar: this.enviar,\n        receber: this.receber,\n        tableData: this.getTableData,\n        tabela: this.state.tabela,\n        setClasse: this.state.setClasse,\n        setAlunoNome: this.setAlunoNome,\n        set_aluno_id: this.setAlunoId,\n        id: this.state.id_aluno,\n        classInformation: this.getClassInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Conteudo","TeacherScreen","Component","constructor","props","state","teste","id_pessoa","id_professor","id_aluno","tabela","classe","operacao","setTeste","event","setState","target","value","setOperacao","setAlunoId","aluno_id","receber","myUrl","requestOptions","method","headers","fetch","then","response","json","data","console","log","setClasse","getTableData","concat","headres","getClassInformation","enviar","jsonData","nome","login","senha","body","JSON","stringify","render","setAlunoNome"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,cAAP;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CACf;AACIC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAIlBC,KAJkB,GAIV;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,SAAS,EAAE,CAFP;AAGJC,MAAAA,YAAY,EAAE,CAHV;AAIJC,MAAAA,QAAQ,EAAE,CAJN;AAKJC,MAAAA,MAAM,EAAE,EALJ;AAMJC,MAAAA,MAAM,EAAE,EANJ;AAOJC,MAAAA,QAAQ,EAAE;AAPN,KAJU;;AAAA,SAclBC,QAdkB,GAcNC,KAAD,IAAW;AAClB,WAAKC,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AADV,OAAd;AAGH,KAlBiB;;AAAA,SAoBlBC,WApBkB,GAoBJ,MAAM;AAChB,WAAKH,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KAxBiB;;AAAA,SA0BlBO,UA1BkB,GA0BJC,QAAD,IAAc;AACvB,WAAKL,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAEW;AADA,OAAd;AAGH,KA9BiB;;AAAA,SAgClBC,OAhCkB,GAgCR,MAAM;AACZ,YAAMC,KAAK,GAAG,mCAAd;AAEA,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFU,OAAvB;AAIAC,MAAAA,KAAK,CAACJ,KAAD,EAAQC,cAAR,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OALL;AAMH,KA7CiB;;AAAA,SA+ClBG,SA/CkB,GA+CLnB,KAAD,IAAW;AACnB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAEG,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGH,KAnDiB;;AAAA,SAqDlBiB,YArDkB,GAqDH,MAAM;AACjB,YAAMZ,KAAK,GAAG,oDAAoDa,MAApD,CAA2D,KAAK9B,KAAL,CAAWM,MAAtE,CAAd;AACA,YAAMY,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBY,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAFU,OAAvB;AAIAV,MAAAA,KAAK,CAACJ,KAAD,EAAQC,cAAR,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAG;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;;AACA;;AACA;;AACA,aAAKjB,QAAL,CAAc;AAACL,UAAAA,MAAM,EAAEoB;AAAT,SAAd;AACA;AACH,OATL;AAUH,KArEiB;;AAAA,SAuElBO,mBAvEkB,GAuEI,MAAM;AACxB,YAAMf,KAAK,GAAG,8CAA8Ca,MAA9C,CAAqD,KAAK9B,KAAL,CAAWG,YAAhE,CAAd;AACA,YAAMe,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAFU,OAAvB;AAIAC,MAAAA,KAAK,CAACJ,KAAD,EAAQC,cAAR,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAKjB,QAAL,CAAc;AAACJ,UAAAA,MAAM,EAAEmB;AAAT,SAAd;AACH,OALL;AAMH,KAnFiB;;AAAA,SAqFlBQ,MArFkB,GAqFT,MAAM;AACX,YAAMhB,KAAK,GAAG,mCAAd;AACA,UAAIiB,QAAQ,GAAG;AAAC,gBAAQ,KAAKlC,KAAL,CAAWmC,IAApB;AAA0B,iBAAS,KAAKnC,KAAL,CAAWoC,KAA9C;AAAqD,iBAAS,KAAKpC,KAAL,CAAWqC;AAAzE,OAAf;AAEA,YAAMnB,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBkB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAHa,OAAvB;AAKAb,MAAAA,KAAK,CAACJ,KAAD,EAAQC,cAAR,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,OANL;AAOH,KArGiB;AAEjB;;AAqGDgB,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKT,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKH,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKH,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWM,MAAvB,CAHL,eAII,QAAC,QAAD;AAAU,QAAA,MAAM,EAAI,KAAK2B,MAAzB;AACU,QAAA,OAAO,EAAI,KAAKjB,OAD1B;AAEU,QAAA,SAAS,EAAI,KAAKa,YAF5B;AAGU,QAAA,MAAM,EAAI,KAAK7B,KAAL,CAAWK,MAH/B;AAIU,QAAA,SAAS,EAAI,KAAKL,KAAL,CAAW4B,SAJlC;AAKU,QAAA,YAAY,EAAI,KAAKc,YAL/B;AAMU,QAAA,YAAY,EAAM,KAAK5B,UANjC;AAOU,QAAA,EAAE,EAAI,KAAKd,KAAL,CAAWI,QAP3B;AAQU,QAAA,gBAAgB,EAAI,KAAK4B;AARnC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA1HL","sourcesContent":["import React, { useState } from 'react'\nimport Conteudo from './Conteudo'\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        teste: 0,\n        id_pessoa: 0,\n        id_professor: 2,\n        id_aluno: 0,\n        tabela: [],\n        classe: [],\n        operacao: 10\n    };\n\n    setTeste = (event) => {\n        this.setState({\n            teste: event.target.value\n        });\n    }\n\n    setOperacao = () => {\n        this.setState({\n            operacao: 20\n        })\n    }\n\n    setAlunoId = (aluno_id) => {\n        this.setState({\n            id_aluno: aluno_id\n        })\n    };\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    setClasse = (event) => {\n        this.setState({\n            classe: event.target.value\n        })\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/informacaoclasse/3ยบ_ano'.concat(this.state.classe)\n        const requestOptions = {\n            method: 'GET',\n            headres: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                this.setState({tabela: data})\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    getClassInformation = () => {\n        const myUrl = 'http://localhost:8000/api/classinformation/'.concat(this.state.id_professor)\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!!\");\n                this.setState({classe: data})\n            })\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    render(){\n        \n        return(\n            <div className=\"TeacherScreen\">\n                <button onClick={this.getClassInformation}>Get class information</button>\n                <button onClick={this.getTableData}>Get table information</button>\n                {console.log(this.state.classe)}\n                <Conteudo enviar = {this.enviar} \n                          receber = {this.receber} \n                          tableData = {this.getTableData} \n                          tabela = {this.state.tabela} \n                          setClasse = {this.state.setClasse}\n                          setAlunoNome = {this.setAlunoNome} \n                          set_aluno_id   = {this.setAlunoId}\n                          id = {this.state.id_aluno}\n                          classInformation = {this.getClassInformation}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}