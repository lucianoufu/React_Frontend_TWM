{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Conteudo from './Conteudo';\nimport Main2 from './main2';\nimport Dropmenu from './Dropmenu';\nimport ShowTable from './ShowTable';\nimport GetInfo from './getInfo';\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nota: 0,\n      falta: 0,\n      id_professor: 2,\n      id: 0,\n      tabela: [],\n      classes: [],\n      classe_selecionada: 0,\n      id_estudante: 0,\n      id_disciplina: 0,\n      faltas: 0,\n      data_inicio: 0,\n      data_fim: 0\n    };\n\n    this.setId = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.setClasseSelecionada = event => {\n      this.setState({\n        classe_selecionada: event.target.value\n      });\n      this.getTableData();\n    };\n\n    this.setNota = event => {\n      this.setState({\n        nota: event.target.value\n      });\n    };\n\n    this.setFalta = event => {\n      this.setState({\n        falta: event.target.value\n      });\n    };\n\n    this.getClasseSelecionada = () => {\n      return this.state.classe_selecionada;\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada());\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        this.setState({\n          tabela: data\n        });\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.getClassInformation = () => {\n      const myUrl = 'http://localhost:8000/api/listaclasse/2';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!!\");\n        this.setState({\n          classes: data\n        });\n      });\n      console.log(this.state.classe);\n    };\n\n    this.getAlunoInfo = () => {\n      const myUrl = 'http://localhost:8000/api/disciplinaestudante/1';\n      /* .concat(this.state.id) */\n\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado novo !!!!!\");\n        console.log(data);\n        this.setState({\n          id_estudante: data.id_estudante\n        });\n        this.setState({\n          id_disciplina: data.id_disciplina\n        });\n        this.setState({\n          faltas: data.faltas\n        });\n        this.setState({\n          data_inicio: data.data_inicio\n        });\n        this.setState({\n          data_fim: data.data_fim\n        });\n      });\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getClassInformation,\n        children: \"Get class information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head2\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2003 EducaUB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Painel do professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropmenu, {\n          setClasseSelecionada: this.setClasseSelecionada,\n          classe_seleciona: this.state.classe_selecionada,\n          classes: this.state.classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ShowTable, {\n          tabela: this.state.tabela\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Notas e faltas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GetInfo, {\n          texto: \"Id do aluno\",\n          set_valor: this.setId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GetInfo, {\n          texto: \"Nota do aluno\",\n          set_valor: this.setNota\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-primary\",\n          onClick: this.getAlunoInfo,\n          children: \"Enviar informa\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Id: \", this.state.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nota: \", this.state.nota]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"id_estudante: \", this.state.id_estudante]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"id_disciplina: \", this.state.id_disciplina]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"faltas: \", this.state.faltas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"data_inicio: \", this.state.data_inicio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"data_fim: \", this.state.data_fim]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Conteudo","Main2","Dropmenu","ShowTable","GetInfo","TeacherScreen","Component","constructor","props","state","nota","falta","id_professor","id","tabela","classes","classe_selecionada","id_estudante","id_disciplina","faltas","data_inicio","data_fim","setId","event","setState","target","value","setClasseSelecionada","getTableData","setNota","setFalta","getClasseSelecionada","myUrl","concat","requestOptions","method","headers","fetch","then","response","json","data","console","log","getClassInformation","classe","getAlunoInfo","enviar","jsonData","nome","login","senha","body","JSON","stringify","receber","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Conteudo from './Conteudo'\nimport Main2 from './main2'\nimport Dropmenu from './Dropmenu'\nimport ShowTable from './ShowTable'\nimport GetInfo from './getInfo'\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        nota: 0,\n        falta: 0,\n        id_professor: 2,\n        id: 0,\n        tabela: [],\n        classes: [],\n        classe_selecionada: 0,\n        id_estudante: 0,\n        id_disciplina: 0,\n        faltas: 0,\n        data_inicio: 0,\n        data_fim: 0\n\n    };\n\n    setId = (event) => {\n        this.setState({\n            id: event.target.value\n        })\n    };\n\n    \n    setClasseSelecionada = (event) => {\n        this.setState({\n            classe_selecionada: event.target.value,\n        })\n        this.getTableData()\n    }\n\n    setNota = (event) => {\n        this.setState({\n            nota: event.target.value\n        })\n    }\n\n    setFalta = (event) => {\n        this.setState({\n            falta: event.target.value\n        })\n    }\n\n    getClasseSelecionada = () => {\n        return this.state.classe_selecionada\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada())\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                this.setState({tabela: data})\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    getClassInformation = () => {\n        const myUrl = 'http://localhost:8000/api/listaclasse/2'\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!!\");\n                this.setState({classes: data})\n            })\n            console.log(this.state.classe)\n    }\n\n    getAlunoInfo = () => {\n        const myUrl = 'http://localhost:8000/api/disciplinaestudante/1'/* .concat(this.state.id) */\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'}   \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado novo !!!!!\")\n                console.log(data)\n                this.setState({id_estudante: data.id_estudante})\n                this.setState({id_disciplina: data.id_disciplina})\n                this.setState({faltas: data.faltas})\n                this.setState({data_inicio: data.data_inicio})\n                this.setState({data_fim: data.data_fim})\n            })\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    render(){\n        \n        return(\n            <div className=\"TeacherScreen\">\n                <button onClick={this.getClassInformation}>Get class information</button>\n                \n                    <header className=\"head1\"></header>\n                    <header className=\"head2\">\n                        <h2>&emsp; EducaUB</h2>\n                    </header>\n                    <div class = \"container\">\n                        <h2>Painel do professor</h2>\n                        <Dropmenu setClasseSelecionada = {this.setClasseSelecionada} classe_seleciona = {this.state.classe_selecionada} classes = {this.state.classes}/>\n                        <ShowTable tabela = {this.state.tabela} />\n\n                        <h2>Notas e faltas</h2>\n                        <GetInfo texto = \"Id do aluno\"   set_valor   = {this.setId}/>\n                        <GetInfo texto = \"Nota do aluno\" set_valor = {this.setNota}/>\n                        <br />\n                        <button type=\"button\" class=\"btn btn-primary\" onClick = {this.getAlunoInfo} >Enviar informações</button>\n                        \n                        <p>Id: {this.state.id}</p>\n                        <p>Nota: {this.state.nota}</p>\n                        <p>id_estudante: {this.state.id_estudante}</p>\n                        <p>id_disciplina: {this.state.id_disciplina}</p>\n                        <p>faltas: {this.state.faltas}</p>\n                        <p>data_inicio: {this.state.data_inicio}</p>\n                        <p>data_fim: {this.state.data_fim}</p>\n                        \n                    </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}