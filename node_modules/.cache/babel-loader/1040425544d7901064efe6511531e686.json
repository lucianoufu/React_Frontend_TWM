{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Cabecalho from './Cabecalho';\nimport Conteudo from './Conteudo';\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* nomeProfessor: '', */\n\n      /* classe: '' */\n      nome: '',\n      id_aluno: 0,\n      tabela: []\n    };\n\n    this.setClasse = novaClasse => {\n      this.setState({\n        classe: novaClasse\n      });\n    };\n\n    this.setAlunoId = aluno_id => {\n      this.setState({\n        id_aluno: aluno_id\n      });\n    };\n\n    this.setAlunoNome = aluno_nome => {\n      this.setState({\n        nome: aluno_nome\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/escola/';\n      const requestOptions = {\n        method: 'GET',\n        headres: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        this.setState({\n          tabela: data\n        });\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: /*#__PURE__*/_jsxDEV(Conteudo, {\n        enviar: this.enviar,\n        receber: this.receber,\n        tableData: this.getTableData,\n        tabela: this.state.tabela,\n        set_aluno_nome: this.state.setAlunoNome,\n        set_aluno_id: this.state.setAlunoId,\n        nome: this.state.nome,\n        id: this.state.id_aluno\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Cabecalho","Conteudo","TeacherScreen","Component","constructor","props","state","nome","id_aluno","tabela","setClasse","novaClasse","setState","classe","setAlunoId","aluno_id","setAlunoNome","aluno_nome","receber","myUrl","requestOptions","method","headers","fetch","then","response","json","data","console","log","getTableData","headres","enviar","jsonData","login","senha","body","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Cabecalho from './Cabecalho'\nimport Conteudo from './Conteudo'\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        /* nomeProfessor: '', */\n        /* classe: '' */\n        nome: '',\n        id_aluno: 0,\n        tabela: []\n    };\n\n    setClasse = (novaClasse) => {\n        this.setState({\n            classe: novaClasse\n        })\n    }\n\n    setAlunoId = (aluno_id) => {\n        this.setState({\n            id_aluno: aluno_id\n        })\n    }\n\n    setAlunoNome = (aluno_nome) => {\n        this.setState({\n            nome: aluno_nome\n        })\n    }\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/escola/'\n        const requestOptions = {\n            method: 'GET',\n            headres: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                this.setState({tabela: data})\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    render(){\n        \n        return(\n            <div className=\"TeacherScreen\">\n                <Conteudo enviar = {this.enviar} \n                          receber = {this.receber} \n                          tableData = {this.getTableData} \n                          tabela = {this.state.tabela} \n                          set_aluno_nome = {this.state.setAlunoNome} \n                          set_aluno_id   = {this.state.setAlunoId}\n                          nome = {this.state.nome}\n                          id = {this.state.id_aluno}/>\n                \n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}