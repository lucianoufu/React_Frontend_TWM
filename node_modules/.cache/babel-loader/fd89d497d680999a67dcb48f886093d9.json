{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Dropmenu from './Dropmenu';\nimport ShowTable from './ShowTable';\nimport GetInfo from './getInfo';\n/* import { FaWhatsapp, FaMailBulk } from \"react-icons/fa\"; */\n\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nota: 0,\n      falta: 0,\n      id_professor: 2,\n      id: 0,\n      tabela: [],\n      classes: [],\n      classe_selecionada: 0,\n      id_estudante: 0,\n      id_disciplina: 0,\n      faltas: 0,\n      data_inicio: 0,\n      data_fim: 0\n    };\n\n    this.setId = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.setClasseSelecionada = event => {\n      this.setState({\n        classe_selecionada: 1\n      });\n      console.log(this.state.classe_selecionada);\n      this.getTableData();\n    };\n\n    this.setNota = event => {\n      this.setState({\n        nota: event.target.value\n      });\n    };\n\n    this.setFalta = event => {\n      this.setState({\n        faltas: parseInt(this.state.faltas, 10) + parseInt(event.target.value, 10)\n      });\n    };\n\n    this.getClasseSelecionada = () => {\n      return this.state.classe_selecionada;\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada());\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        this.setState({\n          tabela: data\n        });\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.getClassInformation = () => {\n      const myUrl = 'http://localhost:8000/api/listaclasse/'.concat(this.state.id_professor);\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!!\");\n        this.setState({\n          classes: data\n        });\n      });\n      console.log(this.state.classe);\n    };\n\n    this.getAlunoInfo = () => {\n      const myUrl = 'http://localhost:8000/api/disciplinaestudante/'.concat(this.state.id, \"/\");\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado novo !!!!!\");\n        console.log(data);\n        this.setState({\n          id_estudante: data.id_estudante\n        });\n        this.setState({\n          id_disciplina: data.id_disciplina\n        });\n        this.setState({\n          faltas: data.faltas\n        });\n        this.setState({\n          data_inicio: data.data_inicio\n        });\n        this.setState({\n          data_fim: data.data_fim\n        });\n      });\n      this.atualizarAluno();\n    };\n\n    this.atualizarAluno = () => {\n      const myUrl = 'http://localhost:8000/api/disciplinaestudante/'.concat(this.state.id, \"/\");\n      let jsonData = {\n        \"id_estudante\": this.state.id_estudante,\n        \"id_disciplina\": this.state.id_disciplina,\n        \"notas\": this.state.nota,\n        \"faltas\": this.state.faltas,\n        \"data_inicio\": this.state.data_inicio,\n        \"data_fim\": this.state.data_fim\n      };\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getClassInformation,\n        children: \"Get class information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head2\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2003 EducaUB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Painel do professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropmenu, {\n          setClasseSelecionada: this.setClasseSelecionada,\n          classe_seleciona: this.state.classe_selecionada,\n          classes: this.state.classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ShowTable, {\n          tabela: this.state.tabela\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Notas e faltas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GetInfo, {\n          texto: \"Id do aluno\",\n          inputText: this.state.id,\n          set_valor: this.setId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GetInfo, {\n          texto: \"Nota do aluno\",\n          inputText: this.state.nota,\n          set_valor: this.setNota\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.setFalta,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            class: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            class: \"\",\n            children: \"Presente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            class: \"\",\n            children: \"N\\xE3o presente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-primary\",\n          onClick: this.atualizarAluno,\n          children: \"Enviar informa\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u2003 D\\xFAvidas? Contate-nos: \\u2003\", \" \", \" \", \" xxxxx.xxxxx@ufu.br \\u2003 \", \" (34) 9xxxx-xxxx\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Dropmenu","ShowTable","GetInfo","TeacherScreen","Component","constructor","props","state","nota","falta","id_professor","id","tabela","classes","classe_selecionada","id_estudante","id_disciplina","faltas","data_inicio","data_fim","setId","event","setState","target","value","setClasseSelecionada","console","log","getTableData","setNota","setFalta","parseInt","getClasseSelecionada","myUrl","concat","requestOptions","method","headers","fetch","then","response","json","data","getClassInformation","classe","getAlunoInfo","atualizarAluno","jsonData","body","JSON","stringify","enviar","nome","login","senha","receber","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Dropmenu from './Dropmenu'\nimport ShowTable from './ShowTable'\nimport GetInfo from './getInfo'\n/* import { FaWhatsapp, FaMailBulk } from \"react-icons/fa\"; */\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        nota: 0,\n        falta: 0,\n        id_professor: 2,\n        id: 0,\n        tabela: [],\n        classes: [],\n        classe_selecionada: 0,\n        id_estudante: 0,\n        id_disciplina: 0,\n        faltas: 0,\n        data_inicio: 0,\n        data_fim: 0\n\n    };\n\n    setId = (event) => {\n        this.setState({\n            id: event.target.value\n        })\n    };\n\n    \n    setClasseSelecionada = (event) => {\n        this.setState({\n            classe_selecionada: 1,\n        })\n        console.log(this.state.classe_selecionada)\n        this.getTableData()\n    }\n\n    setNota = (event) => {\n        this.setState({\n            nota: event.target.value\n        })\n    }\n\n    setFalta = (event) => {\n        this.setState({\n            faltas: parseInt(this.state.faltas,10) +  parseInt(event.target.value,10)\n        })\n    }\n\n    getClasseSelecionada = () => {\n        return this.state.classe_selecionada\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada())\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                this.setState({tabela: data})\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    getClassInformation = () => {\n        const myUrl = 'http://localhost:8000/api/listaclasse/'.concat(this.state.id_professor)\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!!\");\n                this.setState({classes: data})\n            })\n            console.log(this.state.classe)\n    }\n\n    getAlunoInfo = () => {\n        const myUrl = 'http://localhost:8000/api/disciplinaestudante/'.concat(this.state.id, \"/\")\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'}   \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado novo !!!!!\")\n                console.log(data)\n                this.setState({id_estudante: data.id_estudante})\n                this.setState({id_disciplina: data.id_disciplina})\n                this.setState({faltas: data.faltas})\n                this.setState({data_inicio: data.data_inicio})\n                this.setState({data_fim: data.data_fim})\n            })\n            this.atualizarAluno()\n        \n    }\n\n    atualizarAluno = () => {\n        const myUrl = 'http://localhost:8000/api/disciplinaestudante/'.concat(this.state.id, \"/\")\n        let jsonData = {\"id_estudante\": this.state.id_estudante,\n                        \"id_disciplina\": this.state.id_disciplina,\n                        \"notas\": this.state.nota,\n                        \"faltas\": this.state.faltas,\n                        \"data_inicio\": this.state.data_inicio,\n                        \"data_fim\": this.state.data_fim}\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    render(){\n        \n        return(\n            <div className=\"TeacherScreen\">\n                <button onClick={this.getClassInformation}>Get class information</button>\n                    <header className=\"head1\"></header>\n                    <header className=\"head2\">\n                        <h2>&emsp; EducaUB</h2>\n                    </header>\n                    {/* <div className=\"bg\" /> */}\n                    {/* <div className=\"bg bg2\" /> */}\n                    {/* <div className=\"bg bg3\" /> */}\n                    <div class = \"container\">\n                        <h2>Painel do professor</h2>\n                        <Dropmenu setClasseSelecionada = {this.setClasseSelecionada} classe_seleciona = {this.state.classe_selecionada} classes = {this.state.classes}/>\n                        <ShowTable tabela = {this.state.tabela} />\n\n                        <h2>Notas e faltas</h2>\n                        <GetInfo texto = \"Id do aluno\"   inputText = {this.state.id} set_valor   = {this.setId}/>\n                        <GetInfo texto = \"Nota do aluno\" inputText = {this.state.nota} set_valor = {this.setNota}/>\n                        <br />\n                        <select onChange={this.setFalta}>\n                            <option value = '' class = \"\"></option>\n                            <option value = '0' class = \"\">Presente</option>\n                            <option value = '1' class = \"\">Não presente</option>\n                        </select>\n                        <br/>\n                        <br/>\n                        <button type=\"button\" class=\"btn btn-primary\" onClick = {this.atualizarAluno} >Enviar informações</button>\n                        \n                    </div>\n                    <footer>\n                        <div>\n                            <h3>\n                                &emsp; Dúvidas? Contate-nos: &emsp;{\" \"}\n                                \n                                    {\" \"}\n                                    {/* <FaMailBulk /> */} xxxxx.xxxxx@ufu.br &emsp; {/* <FaWhatsapp /> */} (34)\n                                    9xxxx-xxxx{\" \"}\n                                \n                            </h3>\n                        </div>\n                    </footer>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}