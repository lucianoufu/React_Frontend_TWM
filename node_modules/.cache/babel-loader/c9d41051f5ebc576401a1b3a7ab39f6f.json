{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx\";\nimport React, { useState } from 'react';\nimport Conteudo from './Conteudo';\nimport Main2 from './main2';\nimport Dropmenu from './Dropmenu';\nimport ShowTable from './ShowTable';\nimport getInfo from './getInfo';\nimport './styles.css';\nexport default class TeacherScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nota: 0,\n      falta: 0,\n      id_professor: 2,\n      id_aluno: 0,\n      tabela: [],\n      classes: [],\n      classe_selecionada: 0\n    };\n\n    this.setAlunoId = event => {\n      this.setState({\n        id_aluno: event.target.value\n      });\n    };\n\n    this.receber = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n\n    this.setClasseSelecionada = event => {\n      this.setState({\n        classe_selecionada: event.target.value\n      });\n      this.getTableData();\n    };\n\n    this.setNota = event => {\n      this.setState({\n        nota: event.target.value\n      });\n    };\n\n    this.setFalta = event => {\n      this.setState({\n        falta: event.target.value\n      });\n    };\n\n    this.getClasseSelecionada = () => {\n      return this.state.classe_selecionada;\n    };\n\n    this.getTableData = () => {\n      const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada());\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        /* data.map(dados => { */\n\n        /*     this.state.tabela.concat(dados.nome_escola) */\n\n        /* }) */\n\n        this.setState({\n          tabela: data\n        });\n        /* console.log(this.state.Tabela) */\n      });\n    };\n\n    this.getClassInformation = () => {\n      const myUrl = 'http://localhost:8000/api/listaclasse/2';\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json'\n        }\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!!\");\n        this.setState({\n          classes: data\n        });\n      });\n      console.log(this.state.classe);\n    };\n\n    this.enviar = () => {\n      const myUrl = 'http://localhost:8000/api/pessoa/';\n      let jsonData = {\n        'nome': this.state.nome,\n        'login': this.state.login,\n        'senha': this.state.senha\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      };\n      fetch(myUrl, requestOptions).then(response => response.json()).then(data => {\n        console.log(\"Chegou dado!!\");\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeacherScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getClassInformation,\n        children: \"Get class information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getTableData,\n        children: \"Get table information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"head2\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2003 EducaUB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Painel do professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Dropmenu, {\n          setClasseSelecionada: this.setClasseSelecionada,\n          classe_seleciona: this.state.classe_selecionada,\n          classes: this.state.classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ShowTable, {\n          tabela: this.state.tabela\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"getInfo\", {\n          texto: \"Id do aluno\",\n          set_aluno_id: this.setAlunoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"getInfo\", {\n          texto: \"Nome do aluno\",\n          set_nota: this.setNota\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luciano/Documents/UFU/TWM/Trab_final/teacher-screen/src/Main.jsx"],"names":["React","useState","Conteudo","Main2","Dropmenu","ShowTable","getInfo","TeacherScreen","Component","constructor","props","state","nota","falta","id_professor","id_aluno","tabela","classes","classe_selecionada","setAlunoId","event","setState","target","value","receber","myUrl","requestOptions","method","headers","fetch","then","response","json","data","console","log","setClasseSelecionada","getTableData","setNota","setFalta","getClasseSelecionada","concat","getClassInformation","classe","enviar","jsonData","nome","login","senha","body","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Conteudo from './Conteudo'\nimport Main2 from './main2'\nimport Dropmenu from './Dropmenu'\nimport ShowTable from './ShowTable'\nimport getInfo from './getInfo'\n\nimport './styles.css'\n\nexport default class TeacherScreen extends React.Component\n{\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        nota: 0,\n        falta: 0,\n        id_professor: 2,\n        id_aluno: 0,\n        tabela: [],\n        classes: [],\n        classe_selecionada: 0\n    };\n\n    setAlunoId = (event) => {\n        this.setState({\n            id_aluno: event.target.value\n        })\n    };\n\n    receber = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-type': 'application/json'},            \n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data)\n            })\n    }\n\n    setClasseSelecionada = (event) => {\n        this.setState({\n            classe_selecionada: event.target.value,\n        })\n        this.getTableData()\n    }\n\n    setNota = (event) => {\n        this.setState({\n            nota: event.target.value\n        })\n    }\n\n    setFalta = (event) => {\n        this.setState({\n            falta: event.target.value\n        })\n    }\n\n    getClasseSelecionada = () => {\n        return this.state.classe_selecionada\n    }\n\n    getTableData = () => {\n        const myUrl = 'http://localhost:8000/api/informacaoclasse/'.concat(this.getClasseSelecionada())\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(\"Chegou dado!!\");\n                /* data.map(dados => { */\n                /*     this.state.tabela.concat(dados.nome_escola) */\n                /* }) */\n                this.setState({tabela: data})\n                /* console.log(this.state.Tabela) */\n            })\n    }\n\n    getClassInformation = () => {\n        const myUrl = 'http://localhost:8000/api/listaclasse/2'\n        const requestOptions = {\n            method: 'GET',\n            headers: {'Content-type': 'application/json'},\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!!\");\n                this.setState({classes: data})\n            })\n            console.log(this.state.classe)\n    }\n\n    enviar = () => {\n        const myUrl = 'http://localhost:8000/api/pessoa/'\n        let jsonData = {'nome': this.state.nome, 'login': this.state.login, 'senha': this.state.senha}\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json'},\n            body: JSON.stringify(jsonData)\n        };\n        fetch(myUrl, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Chegou dado!!\");\n                console.log(data);\n                \n            })\n    }\n\n    render(){\n        \n        return(\n            <div className=\"TeacherScreen\">\n                <button onClick={this.getClassInformation}>Get class information</button>\n                <button onClick={this.getTableData}>Get table information</button>\n                {/* <Conteudo enviar = {this.enviar} \n                          receber = {this.receber} \n                          tableData = {this.getTableData} \n                          tabela = {this.state.tabela} \n                          set_classe_selecionada = {this.setClasseSelecionada}\n                          setAlunoNome = {this.setAlunoNome} \n                          set_aluno_id   = {this.setAlunoId}\n                          id = {this.state.id_aluno}\n                          classInformation = {this.getClassInformation}\n                          classe = {this.state.classe}\n                          set_nota = {this.setNota}\n                          set_falta = {this.setFalta}\n                          teste = {this.state.classe_selecionada}\n                          setClasseSelecionada = {this.setClasseSelecionada} classe = {this.state.classe_selecionada} classes = {this.state.classes}/> */}\n                    <header className=\"head1\"></header>\n                    <header className=\"head2\">\n                        <h2>&emsp; EducaUB</h2>\n                    </header>\n                    <div class = \"container\">\n                        <h2>Painel do professor</h2>\n                        <Dropmenu setClasseSelecionada = {this.setClasseSelecionada} classe_seleciona = {this.state.classe_selecionada} classes = {this.state.classes}/>\n                        <ShowTable tabela = {this.state.tabela} />\n                        <getInfo texto = \"Id do aluno\"   set_aluno_id   = {this.setAlunoId}/>\n                        <getInfo texto = \"Nome do aluno\" set_nota = {this.setNota}/>\n                    </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}